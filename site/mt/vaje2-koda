import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.ArrayBlockingQueue;



public class MT2 {
	
	
	private static TreeMap<String, TreeSet<String>> index = new TreeMap<String, TreeSet<String>>();

	public static void main(String[] args) throws FileNotFoundException {
		String path = "C:\\Users\\js4934\\Documents\\MT2";
		File direktorij = new File(path);
		File[] files = direktorij.listFiles(new FileFilter() {
	
			
			@Override
			public boolean accept(File pathname) {
				if (pathname.getName().endsWith(".txt")) {
					return true;
				}
				return false;
			}
		});
		
		for (File f : files) {
			Scanner sc = new Scanner(f);
			while(sc.hasNext()) {
				String word = sc.next().toLowerCase();
				
				if (!index.containsKey(word)) {
					TreeSet<String> noviSet = new TreeSet<String>();
					index.put(word, new TreeSet<String>());
				} else {
					TreeSet<String> set = index.get(word);
					set.add(f.getName());
				}
			}
			sc.close();
		}
		
		String query = "dajmo";
		//cez vse zanka beseda
		query = query.toLowerCase();
		if (index.containsKey(query)) {
			TreeSet<String> aaa = index.get(query);
			for (String a : aaa) {
				//System.out.println(a);
			}
		} 
		
		
		////////////////////////////
		
		
		ArrayList<String> sss = new ArrayList<>();
		sss.add("what");
		sss.add("is");
		sss.add("it");
		
		String[] query2 = {"what", "is", "it"};
		
		TreeSet<String> rezultat = new TreeSet<String>();
		if(index.containsKey(query2[0])) {
			TreeSet<String> relzultat = index.get(query2[0]);
		
		
		for (int i =1; i < query2.length; i++) {
			if (index.containsKey(query2[i])) {
				TreeSet<String> rezultat2 = index.get(query2[i]);
				rezultat.retainAll(rezultat2);
				
			}
			else {
				rezultat = new TreeSet<String>();
			}
		}
		
		
		for (String s : rezultat) {
			System.out.println(s);
		}
		
		
		/////
		
		/*TreeSet<String> finalResult = index.values();
		for (String s : sss) {
			TreeSet<String> result = index.get(s);
			finalResult.retainAll(result);
		}
		
		for (String s : finalResult) {
			System.out.println(s);
		}
		*/
		
		
		
		
	}
	
	
}
